// --------------------------------------------------------------------------------
// Copyright AspDotNetStorefront.com. All Rights Reserved.
// http://www.aspdotnetstorefront.com
// For details on this license please visit the product homepage at the URL above.
// THE ABOVE NOTICE MUST REMAIN INTACT. 
// --------------------------------------------------------------------------------
/* 
 * Signifyd API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AspDotNetStorefront.Signifyd.Client.SwaggerDateConverter;

namespace AspDotNetStorefront.Signifyd.Model
{
    /// <summary>
    /// Recipient
    /// </summary>
    [DataContract]
    public partial class Recipient :  IEquatable<Recipient>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Recipient" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Recipient() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Recipient" /> class.
        /// </summary>
        /// <param name="FullName">The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don&#39;t assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank. (required).</param>
        /// <param name="ConfirmationEmail">When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent. (required).</param>
        /// <param name="DeliveryAddress">DeliveryAddress (required).</param>
        /// <param name="ConfirmationPhone">The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information..</param>
        /// <param name="Organization">If provided by the buyer, the name of the recipient&#39;s company or organization..</param>
        /// <param name="AgeRange">age range of the recipient or null..</param>
        public Recipient(string FullName = default(string), string ConfirmationEmail = default(string), DeliveryAddress DeliveryAddress = default(DeliveryAddress), string ConfirmationPhone = default(string), string Organization = default(string), string AgeRange = default(string))
        {
            // to ensure "FullName" is required (not null)
            if (FullName == null)
            {
                throw new InvalidDataException("FullName is a required property for Recipient and cannot be null");
            }
            else
            {
                this.FullName = FullName;
            }
            // to ensure "ConfirmationEmail" is required (not null)
            if (ConfirmationEmail == null)
            {
                throw new InvalidDataException("ConfirmationEmail is a required property for Recipient and cannot be null");
            }
            else
            {
                this.ConfirmationEmail = ConfirmationEmail;
            }
            // to ensure "DeliveryAddress" is required (not null)
            if (DeliveryAddress == null)
            {
                throw new InvalidDataException("DeliveryAddress is a required property for Recipient and cannot be null");
            }
            else
            {
                this.DeliveryAddress = DeliveryAddress;
            }
            this.ConfirmationPhone = ConfirmationPhone;
            this.Organization = Organization;
            this.AgeRange = AgeRange;
        }
        
        /// <summary>
        /// The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don&#39;t assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank.
        /// </summary>
        /// <value>The full name of the person receiving the goods. If this item is being shipped, then this field is the person it is being shipping to. Don&#39;t assume this name is the same as card.cardHolderName. Only put a value here if the name will actually appear on the shipping label. If this item is digital, then this field will likely be blank.</value>
        [DataMember(Name="fullName", EmitDefaultValue=false)]
        public string FullName { get; set; }

        /// <summary>
        /// When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent.
        /// </summary>
        /// <value>When this purchase was completed, you likely sent a confirmation email or you will be sending a confirmation email to someone once you approve the order. This is the email address to which that confirmation email will be sent.</value>
        [DataMember(Name="confirmationEmail", EmitDefaultValue=false)]
        public string ConfirmationEmail { get; set; }

        /// <summary>
        /// Gets or Sets DeliveryAddress
        /// </summary>
        [DataMember(Name="deliveryAddress", EmitDefaultValue=false)]
        public DeliveryAddress DeliveryAddress { get; set; }

        /// <summary>
        /// The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information.
        /// </summary>
        /// <value>The phone number that you would call if there was something wrong with this order or the phone number that was supplied with the shipping information.</value>
        [DataMember(Name="confirmationPhone", EmitDefaultValue=false)]
        public string ConfirmationPhone { get; set; }

        /// <summary>
        /// If provided by the buyer, the name of the recipient&#39;s company or organization.
        /// </summary>
        /// <value>If provided by the buyer, the name of the recipient&#39;s company or organization.</value>
        [DataMember(Name="organization", EmitDefaultValue=false)]
        public string Organization { get; set; }

        /// <summary>
        /// age range of the recipient or null.
        /// </summary>
        /// <value>age range of the recipient or null.</value>
        [DataMember(Name="ageRange", EmitDefaultValue=false)]
        public string AgeRange { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Recipient {\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  ConfirmationEmail: ").Append(ConfirmationEmail).Append("\n");
            sb.Append("  DeliveryAddress: ").Append(DeliveryAddress).Append("\n");
            sb.Append("  ConfirmationPhone: ").Append(ConfirmationPhone).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  AgeRange: ").Append(AgeRange).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Recipient);
        }

        /// <summary>
        /// Returns true if Recipient instances are equal
        /// </summary>
        /// <param name="other">Instance of Recipient to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Recipient other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.FullName == other.FullName ||
                    this.FullName != null &&
                    this.FullName.Equals(other.FullName)
                ) && 
                (
                    this.ConfirmationEmail == other.ConfirmationEmail ||
                    this.ConfirmationEmail != null &&
                    this.ConfirmationEmail.Equals(other.ConfirmationEmail)
                ) && 
                (
                    this.DeliveryAddress == other.DeliveryAddress ||
                    this.DeliveryAddress != null &&
                    this.DeliveryAddress.Equals(other.DeliveryAddress)
                ) && 
                (
                    this.ConfirmationPhone == other.ConfirmationPhone ||
                    this.ConfirmationPhone != null &&
                    this.ConfirmationPhone.Equals(other.ConfirmationPhone)
                ) && 
                (
                    this.Organization == other.Organization ||
                    this.Organization != null &&
                    this.Organization.Equals(other.Organization)
                ) && 
                (
                    this.AgeRange == other.AgeRange ||
                    this.AgeRange != null &&
                    this.AgeRange.Equals(other.AgeRange)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.FullName != null)
                    hash = hash * 59 + this.FullName.GetHashCode();
                if (this.ConfirmationEmail != null)
                    hash = hash * 59 + this.ConfirmationEmail.GetHashCode();
                if (this.DeliveryAddress != null)
                    hash = hash * 59 + this.DeliveryAddress.GetHashCode();
                if (this.ConfirmationPhone != null)
                    hash = hash * 59 + this.ConfirmationPhone.GetHashCode();
                if (this.Organization != null)
                    hash = hash * 59 + this.Organization.GetHashCode();
                if (this.AgeRange != null)
                    hash = hash * 59 + this.AgeRange.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
