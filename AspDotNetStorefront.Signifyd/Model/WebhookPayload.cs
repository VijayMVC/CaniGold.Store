// --------------------------------------------------------------------------------
// Copyright AspDotNetStorefront.com. All Rights Reserved.
// http://www.aspdotnetstorefront.com
// For details on this license please visit the product homepage at the URL above.
// THE ABOVE NOTICE MUST REMAIN INTACT. 
// --------------------------------------------------------------------------------
/* 
 * Signifyd API
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AspDotNetStorefront.Signifyd.Client.SwaggerDateConverter;

namespace AspDotNetStorefront.Signifyd.Model
{
    /// <summary>
    /// WebhookPayload
    /// </summary>
    [DataContract]
    public partial class WebhookPayload :  IEquatable<WebhookPayload>, IValidatableObject
    {
		public WebhookPayload()
		{

		}

        /// <summary>
        /// Initializes a new instance of the <see cref="WebhookPayload" /> class.
        /// </summary>
        /// <param name="AnalysisUrl">.</param>
        /// <param name="EntriesUrl">.</param>
        /// <param name="NotesUrl">.</param>
        /// <param name="OrderUrl">.</param>
        /// <param name="GuaranteeEligible">.</param>
        /// <param name="Status">Status.</param>
        /// <param name="Uuid">.</param>
        /// <param name="Headline">.</param>
        /// <param name="ReviewDisposition">.</param>
        /// <param name="AssociatedTeam">.</param>
        /// <param name="GetAutoDismiss">.</param>
        /// <param name="GetTeamDismissalDays">.</param>
        /// <param name="OrderId">.</param>
        /// <param name="OrderDate">.</param>
        /// <param name="OrderAmount">.</param>
        /// <param name="CreatedAt">.</param>
        /// <param name="UpdatedAt">nce + investigationId: 1 (number).</param>
        /// <param name="Score">.</param>
        /// <param name="CaseId">.</param>
        /// <param name="GuaranteeDisposition">GuaranteeDisposition.</param>
        public WebhookPayload(string AnalysisUrl = default(string), string EntriesUrl = default(string), string NotesUrl = default(string), string OrderUrl = default(string), bool? GuaranteeEligible = default(bool?), InvestigationStatus Status = default(InvestigationStatus), string Uuid = default(string), string Headline = default(string), string ReviewDisposition = default(string), Team AssociatedTeam = default(Team), bool? GetAutoDismiss = default(bool?), double? GetTeamDismissalDays = default(double?), double? OrderId = default(double?), string OrderDate = default(string), double? OrderAmount = default(double?), string CreatedAt = default(string), string UpdatedAt = default(string), double? Score = default(double?), double? CaseId = default(double?), GuaranteeDisposition GuaranteeDisposition = default(GuaranteeDisposition))
        {
            this.AnalysisUrl = AnalysisUrl;
            this.EntriesUrl = EntriesUrl;
            this.NotesUrl = NotesUrl;
            this.OrderUrl = OrderUrl;
            this.GuaranteeEligible = GuaranteeEligible;
            this.Status = Status;
            this.Uuid = Uuid;
            this.Headline = Headline;
            this.ReviewDisposition = ReviewDisposition;
            this.AssociatedTeam = AssociatedTeam;
            this.GetAutoDismiss = GetAutoDismiss;
            this.GetTeamDismissalDays = GetTeamDismissalDays;
            this.OrderId = OrderId;
            this.OrderDate = OrderDate;
            this.OrderAmount = OrderAmount;
            this.CreatedAt = CreatedAt;
            this.UpdatedAt = UpdatedAt;
            this.Score = Score;
            this.CaseId = CaseId;
            this.GuaranteeDisposition = GuaranteeDisposition;
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="analysisUrl", EmitDefaultValue=false)]
        public string AnalysisUrl { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="entriesUrl", EmitDefaultValue=false)]
        public string EntriesUrl { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="notesUrl", EmitDefaultValue=false)]
        public string NotesUrl { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="orderUrl", EmitDefaultValue=false)]
        public string OrderUrl { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="guaranteeEligible", EmitDefaultValue=false)]
        public bool? GuaranteeEligible { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public InvestigationStatus Status { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="uuid", EmitDefaultValue=false)]
        public string Uuid { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="headline", EmitDefaultValue=false)]
        public string Headline { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="reviewDisposition", EmitDefaultValue=false)]
        public string ReviewDisposition { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="associatedTeam", EmitDefaultValue=false)]
        public Team AssociatedTeam { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="getAutoDismiss", EmitDefaultValue=false)]
        public bool? GetAutoDismiss { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="getTeamDismissalDays", EmitDefaultValue=false)]
        public double? GetTeamDismissalDays { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="orderId", EmitDefaultValue=false)]
        public double? OrderId { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="orderDate", EmitDefaultValue=false)]
        public string OrderDate { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="orderAmount", EmitDefaultValue=false)]
        public double? OrderAmount { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="createdAt", EmitDefaultValue=false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// nce + investigationId: 1 (number)
        /// </summary>
        /// <value>nce + investigationId: 1 (number)</value>
        [DataMember(Name="updatedAt", EmitDefaultValue=false)]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="score", EmitDefaultValue=false)]
        public double? Score { get; set; }

        /// <summary>
        /// 
        /// </summary>
        /// <value></value>
        [DataMember(Name="caseId", EmitDefaultValue=false)]
        public double? CaseId { get; set; }

        /// <summary>
        /// Gets or Sets GuaranteeDisposition
        /// </summary>
        [DataMember(Name="guaranteeDisposition", EmitDefaultValue=false)]
        public GuaranteeDisposition GuaranteeDisposition { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WebhookPayload {\n");
            sb.Append("  AnalysisUrl: ").Append(AnalysisUrl).Append("\n");
            sb.Append("  EntriesUrl: ").Append(EntriesUrl).Append("\n");
            sb.Append("  NotesUrl: ").Append(NotesUrl).Append("\n");
            sb.Append("  OrderUrl: ").Append(OrderUrl).Append("\n");
            sb.Append("  GuaranteeEligible: ").Append(GuaranteeEligible).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  Headline: ").Append(Headline).Append("\n");
            sb.Append("  ReviewDisposition: ").Append(ReviewDisposition).Append("\n");
            sb.Append("  AssociatedTeam: ").Append(AssociatedTeam).Append("\n");
            sb.Append("  GetAutoDismiss: ").Append(GetAutoDismiss).Append("\n");
            sb.Append("  GetTeamDismissalDays: ").Append(GetTeamDismissalDays).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  OrderAmount: ").Append(OrderAmount).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("  CaseId: ").Append(CaseId).Append("\n");
            sb.Append("  GuaranteeDisposition: ").Append(GuaranteeDisposition).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as WebhookPayload);
        }

        /// <summary>
        /// Returns true if WebhookPayload instances are equal
        /// </summary>
        /// <param name="other">Instance of WebhookPayload to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WebhookPayload other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.AnalysisUrl == other.AnalysisUrl ||
                    this.AnalysisUrl != null &&
                    this.AnalysisUrl.Equals(other.AnalysisUrl)
                ) && 
                (
                    this.EntriesUrl == other.EntriesUrl ||
                    this.EntriesUrl != null &&
                    this.EntriesUrl.Equals(other.EntriesUrl)
                ) && 
                (
                    this.NotesUrl == other.NotesUrl ||
                    this.NotesUrl != null &&
                    this.NotesUrl.Equals(other.NotesUrl)
                ) && 
                (
                    this.OrderUrl == other.OrderUrl ||
                    this.OrderUrl != null &&
                    this.OrderUrl.Equals(other.OrderUrl)
                ) && 
                (
                    this.GuaranteeEligible == other.GuaranteeEligible ||
                    this.GuaranteeEligible != null &&
                    this.GuaranteeEligible.Equals(other.GuaranteeEligible)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status.Equals(other.Status)
                ) && 
                (
                    this.Uuid == other.Uuid ||
                    this.Uuid != null &&
                    this.Uuid.Equals(other.Uuid)
                ) && 
                (
                    this.Headline == other.Headline ||
                    this.Headline != null &&
                    this.Headline.Equals(other.Headline)
                ) && 
                (
                    this.ReviewDisposition == other.ReviewDisposition ||
                    this.ReviewDisposition != null &&
                    this.ReviewDisposition.Equals(other.ReviewDisposition)
                ) && 
                (
                    this.AssociatedTeam == other.AssociatedTeam ||
                    this.AssociatedTeam != null &&
                    this.AssociatedTeam.Equals(other.AssociatedTeam)
                ) && 
                (
                    this.GetAutoDismiss == other.GetAutoDismiss ||
                    this.GetAutoDismiss != null &&
                    this.GetAutoDismiss.Equals(other.GetAutoDismiss)
                ) && 
                (
                    this.GetTeamDismissalDays == other.GetTeamDismissalDays ||
                    this.GetTeamDismissalDays != null &&
                    this.GetTeamDismissalDays.Equals(other.GetTeamDismissalDays)
                ) && 
                (
                    this.OrderId == other.OrderId ||
                    this.OrderId != null &&
                    this.OrderId.Equals(other.OrderId)
                ) && 
                (
                    this.OrderDate == other.OrderDate ||
                    this.OrderDate != null &&
                    this.OrderDate.Equals(other.OrderDate)
                ) && 
                (
                    this.OrderAmount == other.OrderAmount ||
                    this.OrderAmount != null &&
                    this.OrderAmount.Equals(other.OrderAmount)
                ) && 
                (
                    this.CreatedAt == other.CreatedAt ||
                    this.CreatedAt != null &&
                    this.CreatedAt.Equals(other.CreatedAt)
                ) && 
                (
                    this.UpdatedAt == other.UpdatedAt ||
                    this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(other.UpdatedAt)
                ) && 
                (
                    this.Score == other.Score ||
                    this.Score != null &&
                    this.Score.Equals(other.Score)
                ) && 
                (
                    this.CaseId == other.CaseId ||
                    this.CaseId != null &&
                    this.CaseId.Equals(other.CaseId)
                ) && 
                (
                    this.GuaranteeDisposition == other.GuaranteeDisposition ||
                    this.GuaranteeDisposition.Equals(other.GuaranteeDisposition)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.AnalysisUrl != null)
                    hash = hash * 59 + this.AnalysisUrl.GetHashCode();
                if (this.EntriesUrl != null)
                    hash = hash * 59 + this.EntriesUrl.GetHashCode();
                if (this.NotesUrl != null)
                    hash = hash * 59 + this.NotesUrl.GetHashCode();
                if (this.OrderUrl != null)
                    hash = hash * 59 + this.OrderUrl.GetHashCode();
                if (this.GuaranteeEligible != null)
                    hash = hash * 59 + this.GuaranteeEligible.GetHashCode();
                hash = hash * 59 + this.Status.GetHashCode();
                if (this.Uuid != null)
                    hash = hash * 59 + this.Uuid.GetHashCode();
                if (this.Headline != null)
                    hash = hash * 59 + this.Headline.GetHashCode();
                if (this.ReviewDisposition != null)
                    hash = hash * 59 + this.ReviewDisposition.GetHashCode();
                if (this.AssociatedTeam != null)
                    hash = hash * 59 + this.AssociatedTeam.GetHashCode();
                if (this.GetAutoDismiss != null)
                    hash = hash * 59 + this.GetAutoDismiss.GetHashCode();
                if (this.GetTeamDismissalDays != null)
                    hash = hash * 59 + this.GetTeamDismissalDays.GetHashCode();
                if (this.OrderId != null)
                    hash = hash * 59 + this.OrderId.GetHashCode();
                if (this.OrderDate != null)
                    hash = hash * 59 + this.OrderDate.GetHashCode();
                if (this.OrderAmount != null)
                    hash = hash * 59 + this.OrderAmount.GetHashCode();
                if (this.CreatedAt != null)
                    hash = hash * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hash = hash * 59 + this.UpdatedAt.GetHashCode();
                if (this.Score != null)
                    hash = hash * 59 + this.Score.GetHashCode();
                if (this.CaseId != null)
                    hash = hash * 59 + this.CaseId.GetHashCode();
                hash = hash * 59 + this.GuaranteeDisposition.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
