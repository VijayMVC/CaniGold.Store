@model AccountCreateIndexViewModel

@{
	ViewBag.MetaTitle = @Html.StringResource("page.title.createaccount");
}

<div class="page-wrap account-create-page">
	<h1 class="account-page-header">
		@Html.StringResource("Header.CreateAccount")
	</h1>

	<div class="page-row account-header">
		@Html.Topic("AccountPageHeader")
	</div>
	@{
		using(Html.BeginForm())
		{
			@Html.AntiForgeryToken()

			<div class="form account-form">
				<h2 class="group-header form-header account-header">
					@Html.StringResource("Header.AccountContact")
				</h2>
				<div class="form-text account-text">
					@Html.StringResource("account.aspx.12")
				</div>
				<div class="account-form-wrap">
					<div class="form account-form">
						<div class="row">
							<div class="col-sm-6 col-md-5 col-lg-4">
								@Html.EditorEntryFor(
									 expression: m => m.Account.FirstName,
									 @class: "first-name",
									 displayWidth: EntrySize.Medium)
							</div>
							<div class="col-sm-6 col-md-5 col-lg-4">
								@Html.EditorEntryFor(
									 expression: m => m.Account.LastName,
									 @class: "last-name",
									 displayWidth: EntrySize.Medium)
							</div>
						</div>

						<div class="row">
							<div class="col-sm-6 col-md-5 col-lg-4">
								@Html.EditorEntryFor(
									 expression: m => m.Account.Email,
									 @class: "email",
									 displayWidth: EntrySize.Medium)
							</div>
							@if(Model.RequireEmailConfirmation)
							{
								<div class="col-sm-6 col-md-5 col-lg-4">
									@Html.EditorEntryFor(
										 expression: m => m.Account.EmailConfirmation,
										 @class: "confirm-email",
										 displayWidth: EntrySize.Medium)
								</div>
							}
						</div>

						<div class="row">
							<div class="col-sm-6 col-md-5 col-lg-4">
								@Html.EditorEntryFor(
									 expression: m => m.Account.Password,
									 @class: "password-one",
									 displayWidth: EntrySize.Medium)
							</div>
							<div class="col-sm-6 col-md-5 col-lg-4">
								@Html.EditorEntryFor(
									 expression: m => m.Account.PasswordConfirmation,
									 @class: "password-two",
									 displayWidth: EntrySize.Medium)
							</div>
						</div>

						@Html.EditorEntryFor(
							expression: m => m.Account.Phone,
							@class: "phone",
							displayWidth: EntrySize.Small,
							editorHtmlAttributes: new Dictionary<string, object>{
								{ "aria-describedby",  "phone-whatsthis-screen-reader"}
							})

						<span id="phone-whatsthis-screen-reader" class="screen-reader-only">@AppLogic.GetString("account.phone.whats-this.content")</span>

						@if(Model.DisplayOver13Selector)
						{
							@Html.EditorEntryFor(
								 expression: (m => m.Account.IsOver13),
								 @class: "over-thirteen")
						}

						@Html.EditorEntryFor(
							 expression: (m => m.Account.IsOkToEmail),
							 @class: "okay-to-email")

						@if(Model.DisplayCaptcha)
						{
							<div class="row">
								<div class="col-sm-6 col-md-5 col-lg-4">
									@Html.Action(ActionNames.Index, ControllerNames.Captcha)
								</div>
							</div>
						}
					</div>
				</div>
				<div class="page-action-bar create-account-actions">
					<input type="submit" class="btn btn-primary create-account-button" value="@Html.StringResource("createaccount.aspx.75")" />
				</div>
			</div>
		}
	}
</div>
