@model ShoppingCartViewModel

@{
	var cartItemsCount = Model.CartItems.Count();
}

@if(cartItemsCount > 0)
{
	using(Html.BeginForm(
		actionName: ActionNames.CheckoutCart,
		controllerName: ControllerNames.CheckoutCart,
		method: FormMethod.Post,
		htmlAttributes: new { @class = "cart-form" }))
	{
		<div class="cart-items">
			@if(Model.UseMaximumCartItemBehavor)
			{
				var visibleItems = Model.CartItems.Take(Model.MaximumCartItemsToDisplay);
				var hiddenItems = Model.CartItems.Skip(Model.MaximumCartItemsToDisplay);

				<div class="visible-cart-items">
					@Html.EditorForMany(
						expression: o => visibleItems,
						templateName: EditorTemplateNames.CheckoutCartItem,
						fieldName: "CartItems")
				</div>
				<div id="hidden-cart-items">
					@Html.EditorForMany(
						expression: o => hiddenItems,
						templateName: EditorTemplateNames.CheckoutCartItem,
						fieldName: "CartItems",
						index: Model.MaximumCartItemsToDisplay)
				</div>
			}
			else
			{
				@Html.EditorForMany(model => model.CartItems, EditorTemplateNames.CheckoutCartItem)
			}
		</div>
		<div class="checkout-action-row cart-actions">
			@if(Model.UseMaximumCartItemBehavor)
			{
				<button type="button" id="view-all-cart-items" class="btn btn-default view-all-cart-button on">
					@Html.StringResource("shoppingcart.viewall")
				</button>
				<button type="button" id="hide-cart-items" class="btn btn-default view-less-cart-button off">
					@Html.StringResource("shoppingcart.viewless")
				</button>
			}
			<input type="submit" class="btn btn-default update-cart-button" value="@Html.StringResource("checkout.updatecart")" />
		</div>
	}

	if(Model.UseMaximumCartItemBehavor)
	{
		@Html.RegisterInlineScript(
	@<script>
		(function ($) {
			function showCartItems() {
				$('#hidden-cart-items').show();
				$('#view-all-cart-items').hide();
				$('#hide-cart-items').show();
			}
			function hideCartItems() {
				$('#hidden-cart-items').hide();
				$('#hide-cart-items').hide();
				$('#view-all-cart-items').show();
			}

			$('#view-all-cart-items').click(function () {
				sessionStorage.setItem('showAllCartItems', true);
				showCartItems();
			});
			$('#hide-cart-items').click(function () {
				sessionStorage.setItem('showAllCartItems', false);
				hideCartItems();
			});

			var showAllCartItems = sessionStorage.getItem('showAllCartItems');
			if (showAllCartItems === 'true') {
				showCartItems();
			}
			else {
				hideCartItems();
			}

		})(adnsf$);
	</script>,
	dependencies: new[]
	{
		ScriptPaths.JQuery.AdnsfAlias,
	})
	}
}
